/*
 * ApplicationInsights-Java
 * Copyright (c) Microsoft Corporation
 * All rights reserved.
 *
 * MIT License
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this
 * software and associated documentation files (the ""Software""), to deal in the Software
 * without restriction, including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software, and to permit
 * persons to whom the Software is furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

apply from: "$buildScriptsDir/common-java.gradle"
apply from: "$buildScriptsDir/publishing.gradle"

archivesBaseName = 'azure-application-insights-spring-boot-starter'

dependencies {
    compile (project(':core'))
    compile (project(':web'))
    provided('org.springframework.boot:spring-boot:1.5.9.RELEASE')
    provided('org.springframework.boot:spring-boot-autoconfigure:1.5.9.RELEASE')
    provided('org.springframework.boot:spring-boot-starter-web:1.5.9.RELEASE')
    provided('org.springframework.boot:spring-boot-configuration-processor:1.5.9.RELEASE')

    testCompile('org.junit.jupiter:junit-jupiter-api:5.1.1')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.1.1')
    testCompile('org.junit.jupiter:junit-jupiter-engine:5.1.1')
    testCompile('org.springframework.boot:spring-boot-starter-test:1.5.9.RELEASE')
    testCompile('org.assertj:assertj-core:3.9.0')
}

compileJava.dependsOn(processResources)
// region Publishing properties

projectPomName = project.msftAppInsightsJavaSdk + " Spring Boot starter"
projectPomDescription = "This is the Spring Boot starter of " + project.msftAppInsightsJavaSdk

whenPomConfigured = { p ->
    def agentArtifactId = project(":agent").jar.baseName
    p.dependencies = p.dependencies.findAll { dep -> dep.artifactId != agentArtifactId }
}
